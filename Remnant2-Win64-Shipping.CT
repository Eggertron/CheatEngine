<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Version: 453438_UE"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Shops don't take your money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant2-Win64-Shipping.exe
  Version: 
  Date   : 2024-11-27
  Author : bboyh

  triggered when purchasing at the merchant
}

[ENABLE]

aobscanmodule(MONEY_DEC,Remnant2-Win64-Shipping.exe,41 2B C4 89 41 2C) // should be unique

MONEY_DEC:
  db 90 90 90
registersymbol(MONEY_DEC)

[DISABLE]

MONEY_DEC:
  db 41 2B C4 89 41 2C

unregistersymbol(MONEY_DEC)

{
// ORIGINAL CODE - INJECTION POINT: Remnant2-Win64-Shipping.exe+23B4637

Remnant2-Win64-Shipping.exe+23B460F: 49 8B CF                    - mov rcx,r15
Remnant2-Win64-Shipping.exe+23B4612: E8 79 1F 94 FE              - call Remnant2-Win64-Shipping.exe+CF6590
Remnant2-Win64-Shipping.exe+23B4617: 45 85 E4                    - test r12d,r12d
Remnant2-Win64-Shipping.exe+23B461A: 7E 31                       - jle Remnant2-Win64-Shipping.exe+23B464D
Remnant2-Win64-Shipping.exe+23B461C: 8B AC 24 88 00 00 00        - mov ebp,[rsp+00000088]
Remnant2-Win64-Shipping.exe+23B4623: FF 4C 24 24                 - dec [rsp+24]
Remnant2-Win64-Shipping.exe+23B4627: 49 83 ED 28                 - sub r13,28
Remnant2-Win64-Shipping.exe+23B462B: 41 83 EE 01                 - sub r14d,01
Remnant2-Win64-Shipping.exe+23B462F: 0F 89 0B FE FF FF           - jns Remnant2-Win64-Shipping.exe+23B4440
Remnant2-Win64-Shipping.exe+23B4635: EB 16                       - jmp Remnant2-Win64-Shipping.exe+23B464D
// ---------- INJECTING HERE ----------
Remnant2-Win64-Shipping.exe+23B4637: 41 2B C4                    - sub eax,r12d
// ---------- DONE INJECTING  ----------
Remnant2-Win64-Shipping.exe+23B463A: 89 41 2C                    - mov [rcx+2C],eax
Remnant2-Win64-Shipping.exe+23B463D: 48 8B 4E 18                 - mov rcx,[rsi+18]
Remnant2-Win64-Shipping.exe+23B4641: 48 83 C1 30                 - add rcx,30
Remnant2-Win64-Shipping.exe+23B4645: E8 46 F2 6A FE              - call Remnant2-Win64-Shipping.exe+A63890
Remnant2-Win64-Shipping.exe+23B464A: 45 33 E4                    - xor r12d,r12d
Remnant2-Win64-Shipping.exe+23B464D: 4C 8B 6C 24 40              - mov r13,[rsp+40]
Remnant2-Win64-Shipping.exe+23B4652: 44 3B 64 24 28              - cmp r12d,[rsp+28]
Remnant2-Win64-Shipping.exe+23B4657: 7C 15                       - jl Remnant2-Win64-Shipping.exe+23B466E
Remnant2-Win64-Shipping.exe+23B4659: 44 0F B6 BC 24 90 00 00 00  - movzx r15d,byte ptr [rsp+00000090]
Remnant2-Win64-Shipping.exe+23B4662: 80 7C 24 20 00              - cmp byte ptr [rsp+20],00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Inf Item Usage"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant2-Win64-Shipping.exe
  Version: 
  Date   : 2024-11-27
  Author : bboyh

  null the function that is used to decrement the inventory used value
}

[ENABLE]

aobscanmodule(ITEM_USE,Remnant2-Win64-Shipping.exe,06 FF 90 30 07 00 00 48 8B 5C 24 38) // should be unique

ITEM_USE+01:
  db 90 90 90 90 90 90
registersymbol(ITEM_USE)

[DISABLE]

ITEM_USE+01:
  db FF 90 30 07 00 00

unregistersymbol(ITEM_USE)

{
// ORIGINAL CODE - INJECTION POINT: Remnant2-Win64-Shipping.exe+23D5451

Remnant2-Win64-Shipping.exe+23D5429: 48 89 83 88 00 00 00  - mov [rbx+00000088],rax
Remnant2-Win64-Shipping.exe+23D5430: E8 EB 63 41 00        - call Remnant2-Win64-Shipping.exe+27EB820
Remnant2-Win64-Shipping.exe+23D5435: 48 8B 43 20           - mov rax,[rbx+20]
Remnant2-Win64-Shipping.exe+23D5439: 48 8B CE              - mov rcx,rsi
Remnant2-Win64-Shipping.exe+23D543C: 8B 54 24 30           - mov edx,[rsp+30]
Remnant2-Win64-Shipping.exe+23D5440: 48 85 C0              - test rax,rax
Remnant2-Win64-Shipping.exe+23D5443: 40 0F 95 C7           - setne dil
Remnant2-Win64-Shipping.exe+23D5447: 48 03 F8              - add rdi,rax
Remnant2-Win64-Shipping.exe+23D544A: 48 89 7B 20           - mov [rbx+20],rdi
Remnant2-Win64-Shipping.exe+23D544E: 48 8B 06              - mov rax,[rsi]
// ---------- INJECTING HERE ----------
Remnant2-Win64-Shipping.exe+23D5451: FF 90 30 07 00 00     - call qword ptr [rax+00000730]
// ---------- DONE INJECTING  ----------
Remnant2-Win64-Shipping.exe+23D5457: 48 8B 5C 24 38        - mov rbx,[rsp+38]
Remnant2-Win64-Shipping.exe+23D545C: 48 8B 74 24 40        - mov rsi,[rsp+40]
Remnant2-Win64-Shipping.exe+23D5461: 48 83 C4 20           - add rsp,20
Remnant2-Win64-Shipping.exe+23D5465: 5F                    - pop rdi
Remnant2-Win64-Shipping.exe+23D5466: C3                    - ret 
Remnant2-Win64-Shipping.exe+23D5467: CC                    - int 3 
Remnant2-Win64-Shipping.exe+23D5468: CC                    - int 3 
Remnant2-Win64-Shipping.exe+23D5469: CC                    - int 3 
Remnant2-Win64-Shipping.exe+23D546A: CC                    - int 3 
Remnant2-Win64-Shipping.exe+23D546B: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Sell, or use for crafting items without losing it"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant2-Win64-Shipping.exe
  Version: 
  Date   : 2024-11-27
  Author : bboyh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ITEM_SELL_DEC,Remnant2-Win64-Shipping.exe,41 2B C5 89 41 2C) // should be unique

ITEM_SELL_DEC:
  db 90 90 90
registersymbol(ITEM_SELL_DEC)

[DISABLE]

ITEM_SELL_DEC:
  db 41 2B C5 89 41 2C

unregistersymbol(ITEM_SELL_DEC)

{
// ORIGINAL CODE - INJECTION POINT: Remnant2-Win64-Shipping.exe+23B4252

Remnant2-Win64-Shipping.exe+23B423C: 48 83 C4 20     - add rsp,20
Remnant2-Win64-Shipping.exe+23B4240: 41 5F           - pop r15
Remnant2-Win64-Shipping.exe+23B4242: 41 5E           - pop r14
Remnant2-Win64-Shipping.exe+23B4244: 41 5D           - pop r13
Remnant2-Win64-Shipping.exe+23B4246: 41 5C           - pop r12
Remnant2-Win64-Shipping.exe+23B4248: 5F              - pop rdi
Remnant2-Win64-Shipping.exe+23B4249: C3              - ret 
Remnant2-Win64-Shipping.exe+23B424A: 8B 41 2C        - mov eax,[rcx+2C]
Remnant2-Win64-Shipping.exe+23B424D: 41 3B C5        - cmp eax,r13d
Remnant2-Win64-Shipping.exe+23B4250: 7E 12           - jle Remnant2-Win64-Shipping.exe+23B4264
// ---------- INJECTING HERE ----------
Remnant2-Win64-Shipping.exe+23B4252: 41 2B C5        - sub eax,r13d
// ---------- DONE INJECTING  ----------
Remnant2-Win64-Shipping.exe+23B4255: 89 41 2C        - mov [rcx+2C],eax
Remnant2-Win64-Shipping.exe+23B4258: 49 8B CF        - mov rcx,r15
Remnant2-Win64-Shipping.exe+23B425B: E8 E0 AB FF FF  - call Remnant2-Win64-Shipping.exe+23AEE40
Remnant2-Win64-Shipping.exe+23B4260: B0 01           - mov al,01
Remnant2-Win64-Shipping.exe+23B4262: EB C9           - jmp Remnant2-Win64-Shipping.exe+23B422D
Remnant2-Win64-Shipping.exe+23B4264: 44 89 61 2C     - mov [rcx+2C],r12d
Remnant2-Win64-Shipping.exe+23B4268: 33 D2           - xor edx,edx
Remnant2-Win64-Shipping.exe+23B426A: 48 8B 4B 18     - mov rcx,[rbx+18]
Remnant2-Win64-Shipping.exe+23B426E: 48 83 C1 30     - add rcx,30
Remnant2-Win64-Shipping.exe+23B4272: E8 19 F6 6A FE  - call Remnant2-Win64-Shipping.exe+A63890
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Inf Ammo"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant2-Win64-Shipping.exe
  Version: 
  Date   : 2024-11-27
  Author : bboyh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AMMO_DEC,Remnant2-Win64-Shipping.exe,BA 01 00 00 00 FF 50 28 44) // should be unique

AMMO_DEC:
  mov edx,00000000
registersymbol(AMMO_DEC)

[DISABLE]

AMMO_DEC:
  db BA 01 00 00 00

unregistersymbol(AMMO_DEC)

{
// ORIGINAL CODE - INJECTION POINT: Remnant2-Win64-Shipping.exe+239F511

Remnant2-Win64-Shipping.exe+239F4E8: E8 93 29 01 00        - call Remnant2-Win64-Shipping.exe+23B1E80
Remnant2-Win64-Shipping.exe+239F4ED: 44 38 AE 98 0A 00 00  - cmp [rsi+00000A98],r13b
Remnant2-Win64-Shipping.exe+239F4F4: BB 20 0C 00 00        - mov ebx,00000C20
Remnant2-Win64-Shipping.exe+239F4F9: 8B C3                 - mov eax,ebx
Remnant2-Win64-Shipping.exe+239F4FB: 41 BF 48 08 00 00     - mov r15d,00000848
Remnant2-Win64-Shipping.exe+239F501: 41 0F 44 C7           - cmove eax,r15d
Remnant2-Win64-Shipping.exe+239F505: 48 8B 0C 30           - mov rcx,[rax+rsi]
Remnant2-Win64-Shipping.exe+239F509: 48 85 C9              - test rcx,rcx
Remnant2-Win64-Shipping.exe+239F50C: 74 0B                 - je Remnant2-Win64-Shipping.exe+239F519
Remnant2-Win64-Shipping.exe+239F50E: 48 8B 01              - mov rax,[rcx]
// ---------- INJECTING HERE ----------
Remnant2-Win64-Shipping.exe+239F511: BA 01 00 00 00        - mov edx,00000001
// ---------- DONE INJECTING  ----------
Remnant2-Win64-Shipping.exe+239F516: FF 50 28              - call qword ptr [rax+28]
Remnant2-Win64-Shipping.exe+239F519: 44 38 AE 98 0A 00 00  - cmp [rsi+00000A98],r13b
Remnant2-Win64-Shipping.exe+239F520: 49 0F 44 DF           - cmove rbx,r15
Remnant2-Win64-Shipping.exe+239F524: 48 8B 0C 33           - mov rcx,[rbx+rsi]
Remnant2-Win64-Shipping.exe+239F528: 48 85 C9              - test rcx,rcx
Remnant2-Win64-Shipping.exe+239F52B: 74 0F                 - je Remnant2-Win64-Shipping.exe+239F53C
Remnant2-Win64-Shipping.exe+239F52D: 48 8B 01              - mov rax,[rcx]
Remnant2-Win64-Shipping.exe+239F530: 0F 28 DE              - movaps xmm3,xmm6
Remnant2-Win64-Shipping.exe+239F533: 4C 8B C7              - mov r8,rdi
Remnant2-Win64-Shipping.exe+239F536: 48 8B D5              - mov rdx,rbp
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of call qword ptr [rax+00000730]</Description>
      <AddressString>Remnant2-Win64-Shipping.exe+23D5451</AddressString>
      <Before>
        <Byte>7B</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>90</Byte>
        <Byte>30</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>38</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub [rax+64],esi</Description>
      <AddressString>Remnant2-Win64-Shipping.exe+239745C</AddressString>
      <Before>
        <Byte>8F</Byte>
        <Byte>48</Byte>
        <Byte>F9</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>70</Byte>
        <Byte>64</Byte>
      </Actual>
      <After>
        <Byte>F7</Byte>
        <Byte>DE</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>87</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>getApplication().Title="framerates"
getMainForm().Caption="framerates"
getAutoAttachList().add("Remnant2-Win64-Shipping.exe")

</LuaScript>
</CheatTable>
