<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"275957"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"inf ammo clip?"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant-Win64-Shipping.exe
  Version: 
  Date   : 2023-07-28
  Author : bboyh

  This script does blah blah blah
}


[ENABLE]

assert(Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+73,29 7B 54 48 8B CE)
alloc(newmem,$1000,"Remnant-Win64-Shipping.exe"+778E73)

label(code)
label(return)

newmem:

code:
  sub [rbx+54],edi
  add [rbx+54],edi
  mov rcx,rsi
  jmp return

Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+73:
  jmp newmem
  nop
return:

[DISABLE]

Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+73:
  db 29 7B 54 48 8B CE
  // sub [rbx+54],edi
  // mov rcx,rsi

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+73

Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+53: 48 8B 53 10        - mov rdx,[rbx+10]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+57: 4C 8D 40 30        - lea r8,[rax+30]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+5B: 48 63 40 38        - movsxd  rax,dword ptr [rax+38]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+5F: 3B 42 38           - cmp eax,[rdx+38]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+62: 7F 0D              - jg Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+71
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+64: 48 8B C8           - mov rcx,rax
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+67: 48 8B 42 30        - mov rax,[rdx+30]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+6B: 4C 39 04 C8        - cmp [rax+rcx*8],r8
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+6F: 74 02              - je Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+73
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+71: 33 DB              - xor ebx,ebx
// ---------- INJECTING HERE ----------
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+73: 29 7B 54           - sub [rbx+54],edi
// ---------- DONE INJECTING  ----------
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+76: 48 8B CE           - mov rcx,rsi
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+79: 48 8B 06           - mov rax,[rsi]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+7C: F7 DF              - neg edi
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+7E: 8B D7              - mov edx,edi
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+80: FF 90 A8 07 00 00  - call qword ptr [rax+000007A8]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+86: 48 8B 5C 24 30     - mov rbx,[rsp+30]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+8B: 48 8B 74 24 38     - mov rsi,[rsp+38]
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+90: 48 83 C4 20        - add rsp,20
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+94: 5F                 - pop rdi
Remnant-Win64-Shipping.ARangedWeapon::ConsumeAmmo+95: C3                 - ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"scrap pick up modifier?"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant-Win64-Shipping.exe
  Version: 
  Date   : 2023-07-28
  Author : bboyh

   something when you pick up scraps
}

define(address,"Remnant-Win64-Shipping.exe"+773785)
define(bytes,89 42 2C 33 D2)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Remnant-Win64-Shipping.exe"+773785)

label(code)
label(return)

newmem:

code:
  mov [rdx+2C],eax
  xor edx,edx
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov [rdx+2C],eax
  // xor edx,edx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+395

Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+379: 44 8B 45 47     - mov r8d,[rbp+47]
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+37D: 8B 4A 2C        - mov ecx,[rdx+2C]
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+380: 41 3B C8        - cmp ecx,r8d
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+383: 7D 54           - jnl Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3D9
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+385: 8B 7D 67        - mov edi,[rbp+67]
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+388: 41 8B C0        - mov eax,r8d
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+38B: 2B C1           - sub eax,ecx
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+38D: 3B C7           - cmp eax,edi
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+38F: 0F 4E F8        - cmovle edi,eax
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+392: 8D 04 39        - lea eax,[rcx+rdi]
// ---------- INJECTING HERE ----------
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+395: 89 42 2C        - mov [rdx+2C],eax
// ---------- DONE INJECTING  ----------
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+398: 33 D2           - xor edx,edx
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+39A: 48 8B 4E 18     - mov rcx,[rsi+18]
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+39E: 48 83 C1 30     - add rcx,30
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3A2: E8 89 C8 B5 FF  - call Remnant-Win64-Shipping.TMulticastScriptDelegate&lt;FWeakObjectPtr&gt;::ProcessMulticastDelegate&lt;UObject&gt;
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3A7: 29 7D 67        - sub [rbp+67],edi
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3AA: 49 63 FC        - movsxd  rdi,r12d
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3AD: 44 8D 67 01     - lea r12d,[rdi+01]
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3B1: 44 89 65 9F     - mov [rbp-61],r12d
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3B5: 44 3B 65 A3     - cmp r12d,[rbp-5D]
Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3B9: 7E 0F           - jle Remnant-Win64-Shipping.UInventoryComponent::AddItemInternal+3CA
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"item usage script"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant-Win64-Shipping.exe
  Version: 
  Date   : 2023-07-28
  Author : bboyh

  Items used does not decrease
}


[ENABLE]

assert(Remnant-Win64-Shipping.AEquipment::SetQuantity+10,89 50 2C 48 8B 89 68 05 00 00)

Remnant-Win64-Shipping.AEquipment::SetQuantity+10:
  db 90 90 90
return:

[DISABLE]

Remnant-Win64-Shipping.AEquipment::SetQuantity+10:
  db 89 50 2C 48 8B 89 68 05 00 00
  // mov [rax+2C],edx
  // mov rcx,[rcx+00000568]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Remnant-Win64-Shipping.AEquipment::SetQuantity+10

Remnant-Win64-Shipping.exe+7A02FA: CC                    - int 3 
Remnant-Win64-Shipping.exe+7A02FB: CC                    - int 3 
Remnant-Win64-Shipping.exe+7A02FC: CC                    - int 3 
Remnant-Win64-Shipping.exe+7A02FD: CC                    - int 3 
Remnant-Win64-Shipping.exe+7A02FE: CC                    - int 3 
Remnant-Win64-Shipping.exe+7A02FF: CC                    - int 3 
Remnant-Win64-Shipping.AEquipment::SetQuantity: 48 83 EC 28           - sub rsp,28
Remnant-Win64-Shipping.AEquipment::SetQuantity+4: 48 8B 81 50 03 00 00  - mov rax,[rcx+00000350]
Remnant-Win64-Shipping.AEquipment::SetQuantity+B: 48 85 C0              - test rax,rax
Remnant-Win64-Shipping.AEquipment::SetQuantity+E: 74 03                 - je Remnant-Win64-Shipping.AEquipment::SetQuantity+13
// ---------- INJECTING HERE ----------
Remnant-Win64-Shipping.AEquipment::SetQuantity+10: 89 50 2C              - mov [rax+2C],edx
// ---------- DONE INJECTING  ----------
Remnant-Win64-Shipping.AEquipment::SetQuantity+13: 48 8B 89 68 05 00 00  - mov rcx,[rcx+00000568]
Remnant-Win64-Shipping.AEquipment::SetQuantity+1A: 48 85 C9              - test rcx,rcx
Remnant-Win64-Shipping.AEquipment::SetQuantity+1D: 74 64                 - je Remnant-Win64-Shipping.AEquipment::SetQuantity+83
Remnant-Win64-Shipping.AEquipment::SetQuantity+1F: 48 89 5C 24 20        - mov [rsp+20],rbx
Remnant-Win64-Shipping.AEquipment::SetQuantity+24: E8 B7 45 F5 FF        - call Remnant-Win64-Shipping.ACharacterGunfire::GetCharacterInventory
Remnant-Win64-Shipping.AEquipment::SetQuantity+29: 48 8B D8              - mov rbx,rax
Remnant-Win64-Shipping.AEquipment::SetQuantity+2C: 48 85 C0              - test rax,rax
Remnant-Win64-Shipping.AEquipment::SetQuantity+2F: 74 4D                 - je Remnant-Win64-Shipping.AEquipment::SetQuantity+7E
Remnant-Win64-Shipping.AEquipment::SetQuantity+31: 48 8B 88 E8 00 00 00  - mov rcx,[rax+000000E8]
Remnant-Win64-Shipping.AEquipment::SetQuantity+38: 48 85 C9              - test rcx,rcx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Items do not decrease (iron, money, ..., inf buying)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Remnant-Win64-Shipping.exe
  Version: 
  Date   : 2023-07-28
  Author : bboyh

  This script does blah blah blah
}

[ENABLE]

assert(Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1EF,41 2B C6 89 41 2C)

Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1EF:
  db 90 90 90 90 90 90

[DISABLE]

Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1EF:
  db 41 2B C6 89 41 2C
  // sub eax,r14d
  // mov [rcx+2C],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1EF

Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1C9: 41 89 44 24 08     - mov [r12+08],eax
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1CE: E8 ED 71 CC FF     - call "Remnant-Win64"-Shipping.TArray&lt;FBatchedPoint,FDefaultAllocator&gt;::ResizeShrink
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1D3: 45 85 F6           - test r14d,r14d
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1D6: 7E 2D              - jle Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+205
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1D8: FF 4C 24 20        - dec [rsp+20]
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1DC: FF CD              - dec ebp
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1DE: 49 83 ED 28        - sub r13,28
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1E2: 83 7C 24 24 00     - cmp dword ptr [rsp+24],00
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1E7: 0F 8F C3 FE FF FF  - jg Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+B0
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1ED: EB 16              - jmp Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+205
// ---------- INJECTING HERE ----------
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1EF: 41 2B C6           - sub eax,r14d
// ---------- DONE INJECTING  ----------
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1F2: 89 41 2C           - mov [rcx+2C],eax
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1F5: 48 8B 4F 18        - mov rcx,[rdi+18]
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1F9: 48 83 C1 30        - add rcx,30
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+1FD: E8 7E 38 B3 FF     - call Remnant-Win64-Shipping.TMulticastScriptDelegate&lt;FWeakObjectPtr&gt;::ProcessMulticastDelegate&lt;UObject&gt;
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+202: 45 33 F6           - xor r14d,r14d
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+205: 4C 8B 6C 24 30     - mov r13,[rsp+30]
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+20A: 4C 8B 64 24 38     - mov r12,[rsp+38]
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+20F: 48 8B 7C 24 40     - mov rdi,[rsp+40]
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+214: 48 8B 74 24 48     - mov rsi,[rsp+48]
Remnant-Win64-Shipping.UInventoryComponent::RemoveItemInternal+219: 44 3B 74 24 28     - cmp r14d,[rsp+28]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of sub [rbx+54],edi</Description>
      <AddressString>Remnant-Win64-Shipping.exe+778E73</AddressString>
      <Before>
        <Byte>C8</Byte>
        <Byte>74</Byte>
        <Byte>02</Byte>
        <Byte>33</Byte>
        <Byte>DB</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>7B</Byte>
        <Byte>54</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rax+2C],edx</Description>
      <AddressString>Remnant-Win64-Shipping.exe+7A0310</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>50</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>89</Byte>
        <Byte>68</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub eax,r14d</Description>
      <AddressString>Remnant-Win64-Shipping.exe+79C78F</AddressString>
      <Before>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>EB</Byte>
        <Byte>16</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>2B</Byte>
        <Byte>C6</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>2C</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+2C],eax</Description>
      <AddressString>Remnant-Win64-Shipping.exe+79C792</AddressString>
      <Before>
        <Byte>EB</Byte>
        <Byte>16</Byte>
        <Byte>41</Byte>
        <Byte>2B</Byte>
        <Byte>C6</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>18</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
