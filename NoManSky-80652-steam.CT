<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>127</ID>
      <Description>"Shorten Cool Down time"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2020-02-27
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(COOLDOWN,NMS.exe,F3 0F 11 43 0C F3 0F 10) // should be unique
alloc(newmem,$1000,"NMS.exe"+F27B1B)

label(code)
label(return)

newmem:

code:
  addss xmm0,[rbx+0C]
  movss [rbx+0C],xmm0
  jmp return

COOLDOWN:
  jmp newmem
return:
registersymbol(COOLDOWN)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
COOLDOWN:
  db F3 0F 11 43 0C

unregistersymbol(COOLDOWN)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+F27B1B

"NMS.exe"+F27AEB: 0F 28 CE                 -  movaps xmm1,xmm6
"NMS.exe"+F27AEE: 48 8B 83 B8 00 00 00     -  mov rax,[rbx+000000B8]
"NMS.exe"+F27AF5: 0F 28 C6                 -  movaps xmm0,xmm6
"NMS.exe"+F27AF8: 48 8B BC 24 80 00 00 00  -  mov rdi,[rsp+00000080]
"NMS.exe"+F27B00: F3 0F 59 48 10           -  mulss xmm1,[rax+10]
"NMS.exe"+F27B05: F3 0F 5E C1              -  divss xmm0,xmm1
"NMS.exe"+F27B09: F3 41 0F 59 C0           -  mulss xmm0,xmm8
"NMS.exe"+F27B0E: F3 0F 58 43 0C           -  addss xmm0,[rbx+0C]
"NMS.exe"+F27B13: F3 0F 5F C7              -  maxss xmm0,xmm7
"NMS.exe"+F27B17: F3 0F 5D C6              -  minss xmm0,xmm6
// ---------- INJECTING HERE ----------
"NMS.exe"+F27B1B: F3 0F 11 43 0C           -  movss [rbx+0C],xmm0
// ---------- DONE INJECTING  ----------
"NMS.exe"+F27B20: F3 0F 10 25 14 B6 CA 00  -  movss xmm4,[NMS.exe+1BD313C]
"NMS.exe"+F27B28: 0F 28 DC                 -  movaps xmm3,xmm4
"NMS.exe"+F27B2B: F3 0F 10 15 85 AF CA 00  -  movss xmm2,[NMS.exe+1BD2AB8]
"NMS.exe"+F27B33: 40 38 B3 B0 00 00 00     -  cmp [rbx+000000B0],sil
"NMS.exe"+F27B3A: 74 03                    -  je NMS.exe+F27B3F
"NMS.exe"+F27B3C: 0F 28 DA                 -  movaps xmm3,xmm2
"NMS.exe"+F27B3F: F3 0F 5C 5B 34           -  subss xmm3,[rbx+34]
"NMS.exe"+F27B44: 41 0F 28 C0              -  movaps xmm0,xmm8
"NMS.exe"+F27B48: F3 0F 59 05 BC B1 CA 00  -  mulss xmm0,[NMS.exe+1BD2D0C]
"NMS.exe"+F27B50: F3 0F 59 D8              -  mulss xmm3,xmm0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>132</ID>
      <Description>"Prevent Shield variable from changing"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2020-03-01
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(SHIELDS,NMS.exe,01 70 18 45 33 C9) // should be unique
registersymbol(SHIELDS)
SHIELDS:
  nop
  nop
  nop

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
SHIELDS:
  db 01 70 18 45 33 C9
unregistersymbol(SHIELDS)


{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+608555

"NMS.exe"+608535: C3                       -  ret 
"NMS.exe"+608536: 48 89 7C 24 40           -  mov [rsp+40],rdi
"NMS.exe"+60853B: 41 83 F8 04              -  cmp r8d,04
"NMS.exe"+60853F: 75 71                    -  jne NMS.exe+6085B2
"NMS.exe"+608541: 45 33 C9                 -  xor r9d,r9d
"NMS.exe"+608544: 41 8D 50 67              -  lea edx,[r8+67]
"NMS.exe"+608548: E8 13 1F E4 FF           -  call NMS.exe+44A460
"NMS.exe"+60854D: 48 8B F8                 -  mov rdi,rax
"NMS.exe"+608550: 48 85 C0                 -  test rax,rax
"NMS.exe"+608553: 74 5D                    -  je NMS.exe+6085B2
// ---------- INJECTING HERE ----------
"NMS.exe"+608555: 01 70 18                 -  add [rax+18],esi
"NMS.exe"+608558: 45 33 C9                 -  xor r9d,r9d
// ---------- DONE INJECTING  ----------
"NMS.exe"+60855B: 48 8B CB                 -  mov rcx,rbx
"NMS.exe"+60855E: C7 44 24 20 FF FF FF FF  -  mov [rsp+20],FFFFFFFF
"NMS.exe"+608566: 41 8D 51 6B              -  lea edx,[r9+6B]
"NMS.exe"+60856A: 45 8D 41 04              -  lea r8d,[r9+04]
"NMS.exe"+60856E: E8 4D 1E E4 FF           -  call NMS.exe+44A3C0
"NMS.exe"+608573: 8B 4F 18                 -  mov ecx,[rdi+18]
"NMS.exe"+608576: 48 85 C0                 -  test rax,rax
"NMS.exe"+608579: 74 05                    -  je NMS.exe+608580
"NMS.exe"+60857B: 8B 40 1C                 -  mov eax,[rax+1C]
"NMS.exe"+60857E: EB 05                    -  jmp NMS.exe+608585
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>133</ID>
      <Description>"Shields will only increase"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2020-03-01
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(SHEILDS,NMS.exe,01 70 18 45 33 C9) // should be unique
alloc(newmem,$1000,"NMS.exe"+608555)

label(code)
label(return)

newmem:

code:
  cmp esi, 0
  jle return
  add [rax+18],esi
  xor r9d,r9d
  jmp return

SHEILDS:
  jmp newmem
  nop
return:
registersymbol(SHEILDS)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
SHEILDS:
  db 01 70 18 45 33 C9

unregistersymbol(SHEILDS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+608555

"NMS.exe"+608535: C3                       -  ret 
"NMS.exe"+608536: 48 89 7C 24 40           -  mov [rsp+40],rdi
"NMS.exe"+60853B: 41 83 F8 04              -  cmp r8d,04
"NMS.exe"+60853F: 75 71                    -  jne NMS.exe+6085B2
"NMS.exe"+608541: 45 33 C9                 -  xor r9d,r9d
"NMS.exe"+608544: 41 8D 50 67              -  lea edx,[r8+67]
"NMS.exe"+608548: E8 13 1F E4 FF           -  call NMS.exe+44A460
"NMS.exe"+60854D: 48 8B F8                 -  mov rdi,rax
"NMS.exe"+608550: 48 85 C0                 -  test rax,rax
"NMS.exe"+608553: 74 5D                    -  je NMS.exe+6085B2
// ---------- INJECTING HERE ----------
"NMS.exe"+608555: 01 70 18                 -  add [rax+18],esi
"NMS.exe"+608558: 45 33 C9                 -  xor r9d,r9d
// ---------- DONE INJECTING  ----------
"NMS.exe"+60855B: 48 8B CB                 -  mov rcx,rbx
"NMS.exe"+60855E: C7 44 24 20 FF FF FF FF  -  mov [rsp+20],FFFFFFFF
"NMS.exe"+608566: 41 8D 51 6B              -  lea edx,[r9+6B]
"NMS.exe"+60856A: 45 8D 41 04              -  lea r8d,[r9+04]
"NMS.exe"+60856E: E8 4D 1E E4 FF           -  call NMS.exe+44A3C0
"NMS.exe"+608573: 8B 4F 18                 -  mov ecx,[rdi+18]
"NMS.exe"+608576: 48 85 C0                 -  test rax,rax
"NMS.exe"+608579: 74 05                    -  je NMS.exe+608580
"NMS.exe"+60857B: 8B 40 1C                 -  mov eax,[rax+1C]
"NMS.exe"+60857E: EB 05                    -  jmp NMS.exe+608585
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>146</ID>
      <Description>"Crafting give max of used resources"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2020-09-26
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ITEM_DEC_CRAFTING,NMS.exe,44 29 73 18 48 8B 8C 24 90 00 00 00) // should be unique
alloc(newmem,$256,"NMS.exe"+6CB0D0)

label(code)
label(return)

newmem:
  mov r14d,[rbx+1c] // Grab items max stack value

code:
  mov [rbx+18],r14d
  mov rcx,[rsp+00000090]
  jmp return

ITEM_DEC_CRAFTING:
  jmp newmem
  nop 7
return:
registersymbol(ITEM_DEC_CRAFTING)

[DISABLE]

ITEM_DEC_CRAFTING:
  db 44 29 73 18 48 8B 8C 24 90 00 00 00

unregistersymbol(ITEM_DEC_CRAFTING)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+6CB0D0

"NMS.exe"+6CB0A6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"NMS.exe"+6CB0B0: 48 8D 53 28                    -  lea rdx,[rbx+28]
"NMS.exe"+6CB0B4: 48 8D 4D 28                    -  lea rcx,[rbp+28]
"NMS.exe"+6CB0B8: E8 83 C1 C8 FF                 -  call NMS.exe+357240
"NMS.exe"+6CB0BD: 84 C0                          -  test al,al
"NMS.exe"+6CB0BF: 0F 85 91 00 00 00              -  jne NMS.exe+6CB156
"NMS.exe"+6CB0C5: 48 83 C3 30                    -  add rbx,30
"NMS.exe"+6CB0C9: 48 3B DF                       -  cmp rbx,rdi
"NMS.exe"+6CB0CC: 75 E2                          -  jne NMS.exe+6CB0B0
"NMS.exe"+6CB0CE: 33 DB                          -  xor ebx,ebx
// ---------- INJECTING HERE ----------
"NMS.exe"+6CB0D0: 44 29 73 18                    -  sub [rbx+18],r14d
"NMS.exe"+6CB0D4: 48 8B 8C 24 90 00 00 00        -  mov rcx,[rsp+00000090]
"NMS.exe"+6CB0DC: 41 2B F6                       -  sub esi,r14d
// ---------- DONE INJECTING  ----------
"NMS.exe"+6CB0DF: 49 83 C5 08                    -  add r13,08
"NMS.exe"+6CB0E3: 49 FF C4                       -  inc r12
"NMS.exe"+6CB0E6: 4C 3B E1                       -  cmp r12,rcx
"NMS.exe"+6CB0E9: 75 95                          -  jne NMS.exe+6CB080
"NMS.exe"+6CB0EB: 44 8B B4 24 A0 00 00 00        -  mov r14d,[rsp+000000A0]
"NMS.exe"+6CB0F3: 33 DB                          -  xor ebx,ebx
"NMS.exe"+6CB0F5: 48 8B 54 24 28                 -  mov rdx,[rsp+28]
"NMS.exe"+6CB0FA: 48 85 D2                       -  test rdx,rdx
"NMS.exe"+6CB0FD: 74 20                          -  je NMS.exe+6CB11F
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>154</ID>
      <Description>"Recharge give max item used"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2021-01-01
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(USE_RECHARGE,NMS.exe,44 29 60 18 48 85 FF) // should be unique
alloc(newmem,$1000,"NMS.exe"+6863E9)

label(code)
label(return)

newmem:
  mov r12d,[rax+1c] // Grab items max stack value

code:
  mov [rax+18],r12d
  test rdi,rdi
  jmp return

USE_RECHARGE:
  jmp newmem
  nop 2
return:
registersymbol(USE_RECHARGE)

[DISABLE]

USE_RECHARGE:
  db 44 29 60 18 48 85 FF

unregistersymbol(USE_RECHARGE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+6863E9

"NMS.exe"+6863B5: 89 84 24 D0 00 00 00     -  mov [rsp+000000D0],eax
"NMS.exe"+6863BC: E8 1F 57 01 00           -  call NMS.exe+69BAE0
"NMS.exe"+6863C1: 48 8B 94 24 C8 00 00 00  -  mov rdx,[rsp+000000C8]
"NMS.exe"+6863C9: 49 8B CC                 -  mov rcx,r12
"NMS.exe"+6863CC: 48 89 44 24 40           -  mov [rsp+40],rax
"NMS.exe"+6863D1: 01 78 18                 -  add [rax+18],edi
"NMS.exe"+6863D4: E8 07 57 01 00           -  call NMS.exe+69BAE0
"NMS.exe"+6863D9: 44 8B A4 24 D0 00 00 00  -  mov r12d,[rsp+000000D0]
"NMS.exe"+6863E1: 4C 8B E8                 -  mov r13,rax
"NMS.exe"+6863E4: 48 8B 7C 24 30           -  mov rdi,[rsp+30]
// ---------- INJECTING HERE ----------
"NMS.exe"+6863E9: 44 29 60 18              -  sub [rax+18],r12d
"NMS.exe"+6863ED: 48 85 FF                 -  test rdi,rdi
// ---------- DONE INJECTING  ----------
"NMS.exe"+6863F0: 0F 84 8F 00 00 00        -  je NMS.exe+686485
"NMS.exe"+6863F6: 83 BF 70 02 00 00 01     -  cmp dword ptr [rdi+00000270],01
"NMS.exe"+6863FD: 0F 85 82 00 00 00        -  jne NMS.exe+686485
"NMS.exe"+686403: 48 8D 0D 86 62 63 02     -  lea rcx,[NMS.exe+2CBC690]
"NMS.exe"+68640A: E8 51 2E C7 FF           -  call NMS.exe+2F9260
"NMS.exe"+68640F: 8B 8F 90 02 00 00        -  mov ecx,[rdi+00000290]
"NMS.exe"+686415: 4C 8B E0                 -  mov r12,rax
"NMS.exe"+686418: E8 33 B5 01 00           -  call NMS.exe+6A1950
"NMS.exe"+68641D: 83 F8 0D                 -  cmp eax,0D
"NMS.exe"+686420: 74 5B                    -  je NMS.exe+68647D
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>159</ID>
      <Description>"Money Address Enable (open inventory to init)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2021-01-03
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MONEY_READ,NMS.exe,8B 88 CC 01 00 00 41) // should be unique
alloc(newmem,$1000,"NMS.exe"+8FCFC7)
alloc(MONEY_ADDR,8)
registersymbol(MONEY_ADDR)

label(code)
label(return)

MONEY_ADDR:
  db 0

newmem:
  lea rcx,[rax+000001CC]
  mov [MONEY_ADDR],rcx
code:
  mov ecx,[rax+000001CC]
  jmp return

MONEY_READ:
  jmp newmem
  nop
return:
registersymbol(MONEY_READ)

[DISABLE]

MONEY_READ:
  db 8B 88 CC 01 00 00

unregistersymbol(MONEY_READ)
unregistersymbol(MONEY_ADDR)
dealloc(newmem)
dealloc(MONEY_ADDR)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+8FCFC7

"NMS.exe"+8FCF7E: 75 34                       -  jne NMS.exe+8FCFB4
"NMS.exe"+8FCF80: F3 41 0F 10 86 14 1E 00 00  -  movss xmm0,[r14+00001E14]
"NMS.exe"+8FCF89: F3 0F 58 05 33 29 3B 02     -  addss xmm0,[NMS.exe+2CAF8C4]
"NMS.exe"+8FCF91: F3 41 0F 11 86 14 1E 00 00  -  movss [r14+00001E14],xmm0
"NMS.exe"+8FCF9A: F3 41 0F 10 8E 18 1E 00 00  -  movss xmm1,[r14+00001E18]
"NMS.exe"+8FCFA3: F3 0F 58 0D 1D 29 3B 02     -  addss xmm1,[NMS.exe+2CAF8C8]
"NMS.exe"+8FCFAB: F3 41 0F 11 8E 18 1E 00 00  -  movss [r14+00001E18],xmm1
"NMS.exe"+8FCFB4: 45 88 AE F8 0C 01 00        -  mov [r14+00010CF8],r13l
"NMS.exe"+8FCFBB: 48 8D 0D CE F6 3B 02        -  lea rcx,[NMS.exe+2CBC690]
"NMS.exe"+8FCFC2: E8 39 BB 9F FF              -  call NMS.exe+2F8B00
// ---------- INJECTING HERE ----------
"NMS.exe"+8FCFC7: 8B 88 CC 01 00 00           -  mov ecx,[rax+000001CC]
// ---------- DONE INJECTING  ----------
"NMS.exe"+8FCFCD: 41 89 8E C4 29 00 00        -  mov [r14+000029C4],ecx
"NMS.exe"+8FCFD4: 48 8D 0D B5 F6 3B 02        -  lea rcx,[NMS.exe+2CBC690]
"NMS.exe"+8FCFDB: E8 20 BB 9F FF              -  call NMS.exe+2F8B00
"NMS.exe"+8FCFE0: 8B 88 D4 01 00 00           -  mov ecx,[rax+000001D4]
"NMS.exe"+8FCFE6: 41 89 8E C8 29 00 00        -  mov [r14+000029C8],ecx
"NMS.exe"+8FCFED: 48 8D 0D 9C F6 3B 02        -  lea rcx,[NMS.exe+2CBC690]
"NMS.exe"+8FCFF4: E8 07 BB 9F FF              -  call NMS.exe+2F8B00
"NMS.exe"+8FCFF9: 8B 88 D0 01 00 00           -  mov ecx,[rax+000001D0]
"NMS.exe"+8FCFFF: 41 89 8E CC 29 00 00        -  mov [r14+000029CC],ecx
"NMS.exe"+8FD006: 41 8B 86 E0 0C 01 00        -  mov eax,[r14+00010CE0]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>158</ID>
          <Description>"Units"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[MONEY_ADDR]</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Nanite Clusters ------ MOVE ME -----"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+4</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>35</ID>
                  <Description>"No description"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>-8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"quick silvers"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>161</ID>
      <Description>"Use/move Item give max item stack"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2021-01-04
  Author : Edgar Han

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(USE_ITEM,NMS.exe,29 58 18 2B F3) // should be unique
alloc(newmem,$1000,"NMS.exe"+6D840B)

label(code)
label(return)

newmem:
  mov ebx,[rax+1c] // Get item max slot size

code:
  mov [rax+18],ebx
  sub esi,ebx
  jmp return

USE_ITEM:
  jmp newmem
return:
registersymbol(USE_ITEM)

[DISABLE]

USE_ITEM:
  db 29 58 18 2B F3

unregistersymbol(USE_ITEM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+6D840B

"NMS.exe"+6D83E6: 0F 84 C0 01 00 00        -  je NMS.exe+6D85AC
"NMS.exe"+6D83EC: 8B 43 18                 -  mov eax,[rbx+18]
"NMS.exe"+6D83EF: 8B DE                    -  mov ebx,esi
"NMS.exe"+6D83F1: 3B C6                    -  cmp eax,esi
"NMS.exe"+6D83F3: 0F 4C D8                 -  cmovl ebx,eax
"NMS.exe"+6D83F6: 45 85 F6                 -  test r14d,r14d
"NMS.exe"+6D83F9: 75 13                    -  jne NMS.exe+6D840E
"NMS.exe"+6D83FB: 48 8D 94 24 98 00 00 00  -  lea rdx,[rsp+00000098]
"NMS.exe"+6D8403: 49 8B CF                 -  mov rcx,r15
"NMS.exe"+6D8406: E8 D5 36 FC FF           -  call NMS.exe+69BAE0
// ---------- INJECTING HERE ----------
"NMS.exe"+6D840B: 29 58 18                 -  sub [rax+18],ebx
"NMS.exe"+6D840E: 2B F3                    -  sub esi,ebx
// ---------- DONE INJECTING  ----------
"NMS.exe"+6D8410: 85 F6                    -  test esi,esi
"NMS.exe"+6D8412: 0F 8E 7F 01 00 00        -  jng NMS.exe+6D8597
"NMS.exe"+6D8418: 0F 57 C0                 -  xorps xmm0,xmm0
"NMS.exe"+6D841B: F3 0F 7F 44 24 28        -  movdqu [rsp+28],xmm0
"NMS.exe"+6D8421: 45 33 E4                 -  xor r12d,r12d
"NMS.exe"+6D8424: 4C 89 64 24 38           -  mov [rsp+38],r12
"NMS.exe"+6D8429: 49 8B 6F 50              -  mov rbp,[r15+50]
"NMS.exe"+6D842D: 49 8B 5F 48              -  mov rbx,[r15+48]
"NMS.exe"+6D8431: 48 8B 54 24 30           -  mov rdx,[rsp+30]
"NMS.exe"+6D8436: 48 3B DD                 -  cmp rbx,rbp
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>164</ID>
      <Description>"No cool down planet scanner"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2021-01-24
  Author : Edgar Han

  Planet Scanner no cool down time
}

[ENABLE]

aobscanmodule(SCANNER1,NMS.exe,89 59 0C 89 59 38) // should be unique

SCANNER1:
  db 90 90 90
registersymbol(SCANNER1)

[DISABLE]

SCANNER1:
  db 89 59 0C 89 59 38

unregistersymbol(SCANNER1)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+1550648

"NMS.exe"+155061D: 75 07                    -  jne NMS.exe+1550626
"NMS.exe"+155061F: 32 C0                    -  xor al,al
"NMS.exe"+1550621: E9 7B 07 00 00           -  jmp NMS.exe+1550DA1
"NMS.exe"+1550626: 80 B9 B0 00 00 00 00     -  cmp byte ptr [rcx+000000B0],00
"NMS.exe"+155062D: 75 F0                    -  jne NMS.exe+155061F
"NMS.exe"+155062F: F3 0F 10 05 DD 9A B1 02  -  movss xmm0,[NMS.exe+406A114]
"NMS.exe"+1550637: F3 0F 11 41 14           -  movss [rcx+14],xmm0
"NMS.exe"+155063C: C6 81 B0 00 00 00 01     -  mov byte ptr [rcx+000000B0],01
"NMS.exe"+1550643: 33 DB                    -  xor ebx,ebx
"NMS.exe"+1550645: 89 59 30                 -  mov [rcx+30],ebx
// ---------- INJECTING HERE ----------
"NMS.exe"+1550648: 89 59 0C                 -  mov [rcx+0C],ebx
"NMS.exe"+155064B: 89 59 38                 -  mov [rcx+38],ebx
// ---------- DONE INJECTING  ----------
"NMS.exe"+155064E: 0F 10 02                 -  movups xmm0,[rdx]
"NMS.exe"+1550651: 0F 11 41 50              -  movups [rcx+50],xmm0
"NMS.exe"+1550655: 0F 10 42 10              -  movups xmm0,[rdx+10]
"NMS.exe"+1550659: 0F 11 41 60              -  movups [rcx+60],xmm0
"NMS.exe"+155065D: 0F 10 42 20              -  movups xmm0,[rdx+20]
"NMS.exe"+1550661: 0F 11 41 70              -  movups [rcx+70],xmm0
"NMS.exe"+1550665: 0F 10 42 30              -  movups xmm0,[rdx+30]
"NMS.exe"+1550669: 0F 11 81 80 00 00 00     -  movups [rcx+00000080],xmm0
"NMS.exe"+1550670: 4C 89 81 B8 00 00 00     -  mov [rcx+000000B8],r8
"NMS.exe"+1550677: F3 0F 11 99 E8 0E 00 00  -  movss [rcx+00000EE8],xmm3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>225</ID>
      <Description>"Modify Ship Acceleration"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2021-03-03
  Author : Edgar Han

  Modify Acceleration
}

[ENABLE]

aobscanmodule(PULSE_ACC,NMS.exe,0F 11 68 50 48 8B 83 B0 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+1BA1118)

label(code)
label(return)
label(multiplier)

newmem:

code:
  movups [rax+50],xmm5
  movups [old_xmm],xmm5

  movups xmm5,[multiplier]
  mulss xmm5,[rax+50]
  movups [rax+50],xmm5

  movups xmm5,[multiplier]
  mulss xmm5,[rax+54]
  movups [rax+54],xmm5

  movups xmm5,[multiplier]
  mulss xmm5,[rax+58]
  movups [rax+58],xmm5

  movups xmm5,[old_xmm]
  mov rax,[rbx+000000B0]
  jmp return
multiplier:
  dd (float)10
old_xmm:
  dd (float)0

PULSE_ACC:
  jmp newmem
  nop 6
return:
registersymbol(PULSE_ACC)
registersymbol(multiplier)

[DISABLE]

PULSE_ACC:
  db 0F 11 68 50 48 8B 83 B0 00 00 00

unregistersymbol(PULSE_ACC)
unregistersymbol(multiplier)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+1BA1118

"NMS.exe"+1BA10F5: 0F 2F D6                    -  comiss xmm2,xmm6
"NMS.exe"+1BA10F8: 76 1E                       -  jna NMS.exe+1BA1118
"NMS.exe"+1BA10FA: F3 0F 10 0D 3E 30 73 00     -  movss xmm1,[NMS.exe+22D4140]
"NMS.exe"+1BA1102: F3 0F 5E F2                 -  divss xmm6,xmm2
"NMS.exe"+1BA1106: 0F 28 D6                    -  movaps xmm2,xmm6
"NMS.exe"+1BA1109: 0F 28 DE                    -  movaps xmm3,xmm6
"NMS.exe"+1BA110C: 0F 14 DE                    -  unpcklps xmm3,xmm6
"NMS.exe"+1BA110F: 0F 14 D1                    -  unpcklps xmm2,xmm1
"NMS.exe"+1BA1112: 0F 14 DA                    -  unpcklps xmm3,xmm2
"NMS.exe"+1BA1115: 0F 59 EB                    -  mulps xmm5,xmm3
// ---------- INJECTING HERE ----------
"NMS.exe"+1BA1118: 0F 11 68 50                 -  movups [rax+50],xmm5
"NMS.exe"+1BA111C: 48 8B 83 B0 00 00 00        -  mov rax,[rbx+000000B0]
// ---------- DONE INJECTING  ----------
"NMS.exe"+1BA1123: 80 88 80 00 00 00 02        -  or byte ptr [rax+00000080],02
"NMS.exe"+1BA112A: 48 8B 8B B0 00 00 00        -  mov rcx,[rbx+000000B0]
"NMS.exe"+1BA1131: E8 AA 99 02 00              -  call NMS.exe+1BCAAE0
"NMS.exe"+1BA1136: 48 8B 5C 24 58              -  mov rbx,[rsp+58]
"NMS.exe"+1BA113B: 0F 28 74 24 30              -  movaps xmm6,[rsp+30]
"NMS.exe"+1BA1140: 48 83 C4 40                 -  add rsp,40
"NMS.exe"+1BA1144: 5F                          -  pop rdi
"NMS.exe"+1BA1145: C3                          -  ret 
"NMS.exe"+1BA1146: CC                          -  int 3 
"NMS.exe"+1BA1147: CC                          -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>226</ID>
      <Description>"No Description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>1D75CA32968</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>227</ID>
      <Description>"Collection/Mining Multiplier"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2022-01-14
  Author : Edgar Han

  Modifies the Number Collection Rate of Items collected/mined.
}

[ENABLE]

aobscanmodule(COLLECT_ITEM,NMS.exe,01 58 18 E9 83 00 00 00) // should be unique
alloc(newmem,$1000,COLLECT_ITEM)
alloc(collect_multiplier,8,COLLECT_ITEM)
registersymbol(collect_multiplier)

label(code)
label(return)

collect_multiplier:
  dd 8

newmem:
  imul ebx,[collect_multiplier]

code:
  add [rax+18],ebx
  jmp NMS.exe+7455E1
  jmp return

COLLECT_ITEM:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(COLLECT_ITEM)

[DISABLE]

COLLECT_ITEM:
  db 01 58 18 E9 83 00 00 00

unregistersymbol(COLLECT_ITEM)
unregistersymbol(collect_multiplier)
dealloc(newmem)
dealloc(collect_multiplier)

{
// ORIGINAL CODE - INJECTION POINT: NMS.exe+745556

NMS.exe+74552F: 0F 8E CA 00 00 00  - jng NMS.exe+7455FF
NMS.exe+745535: 3B 45 5F           - cmp eax,[rbp+5F]
NMS.exe+745538: 0F 4C D8           - cmovl ebx,eax
NMS.exe+74553B: 83 7D 77 00        - cmp dword ptr [rbp+77],00
NMS.exe+74553F: 0F 85 B4 00 00 00  - jne NMS.exe+7455F9
NMS.exe+745545: 48 8D 57 FC        - lea rdx,[rdi-04]
NMS.exe+745549: 49 8B CC           - mov rcx,r12
NMS.exe+74554C: E8 DF A1 FB FF     - call NMS.exe+6FF730
NMS.exe+745551: 48 85 C0           - test rax,rax
NMS.exe+745554: 74 08              - je NMS.exe+74555E
// ---------- INJECTING HERE ----------
NMS.exe+745556: 01 58 18           - add [rax+18],ebx
// ---------- DONE INJECTING  ----------
NMS.exe+745559: E9 83 00 00 00     - jmp NMS.exe+7455E1
NMS.exe+74555E: 48 63 4F FC        - movsxd  rcx,dword ptr [rdi-04]
NMS.exe+745562: 85 C9              - test ecx,ecx
NMS.exe+745564: 78 39              - js NMS.exe+74559F
NMS.exe+745566: 41 0F BF 44 24 40  - movsx eax,word ptr [r12+40]
NMS.exe+74556C: 3B C8              - cmp ecx,eax
NMS.exe+74556E: 7D 2F              - jnl NMS.exe+74559F
NMS.exe+745570: 4C 63 07           - movsxd  r8,dword ptr [rdi]
NMS.exe+745573: 45 85 C0           - test r8d,r8d
NMS.exe+745576: 78 27              - js NMS.exe+74559F
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>228</ID>
          <Description>"Multipler"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>collect_multiplier</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>NMS.exe+745EE5 - 48 8D 0D 64779B02     - lea rcx,[NMS.exe+30FD650] { (1D7591AA060) }
</Comments>
</CheatTable>
